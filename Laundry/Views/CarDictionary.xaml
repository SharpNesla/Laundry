<utils:ActivityControl x:Class="Laundry.Views.CarDictionary"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Laundry.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             xmlns:controls="clr-namespace:Laundry.Views"
             xmlns:utils="clr-namespace:Laundry.Utils"
             d:DesignHeight="600" d:DesignWidth="800"
             Background="{DynamicResource MaterialDesignPaper}">
  <DockPanel LastChildFill="True">
    <materialDesign:ColorZone DockPanel.Dock="Top" materialDesign:ShadowAssist.ShadowDepth="Depth1" Mode="PrimaryMid"
                              Padding="16">
      <StackPanel Orientation="Horizontal">
        <ToggleButton Name="MenuToggleButton"
                      Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
        <TextBlock
          
          Style="{StaticResource MaterialDesignHeadlineTextBlock}"
          VerticalAlignment="Center"
          Margin="16 0 0 0">
          Автопарк
        </TextBlock>
      </StackPanel>
    </materialDesign:ColorZone>
        <Button DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="0 0 16 16" materialDesign:ShadowAssist.ShadowDepth="Depth3"
      Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
      ToolTip="MaterialDesignFloatingActionAccentButton">
            <materialDesign:PackIcon
        Kind="Plus"
        Height="24"
        Width="24" />
    </Button>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
      <DataGrid
        Margin="16"
        CanUserSortColumns="True"
        CanUserAddRows="False"
        AutoGenerateColumns="True"
        materialDesign:DataGridAssist.CellPadding="13 8 8 8"
        materialDesign:DataGridAssist.ColumnHeaderPadding="8">
        <DataGrid.Columns>
          <DataGridCheckBoxColumn
            Binding="{Binding IsSelected}"
            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
            <DataGridCheckBoxColumn.Header>
              <!--padding to allow hit test to pass thru for sorting -->
              <Border
                Background="Transparent"
                Padding="6 0 6 0"
                HorizontalAlignment="Center">
                <CheckBox
                  HorizontalAlignment="Center"
                  DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                  IsChecked="{Binding IsAllItems3Selected}" />
              </Border>
            </DataGridCheckBoxColumn.Header>
          </DataGridCheckBoxColumn>
          <DataGridTextColumn
            Binding="{Binding Code}"
            Header="Code"
            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
          <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
          <materialDesign:MaterialDataGridTextColumn
            Binding="{Binding Name}"
            Header="Name"
            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
          <!-- set a max length to get an indicator in the editor -->
          <materialDesign:MaterialDataGridTextColumn
            Binding="{Binding Description}"
            Header="Description"
            MaxLength="255"
            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
          <materialDesign:MaterialDataGridTextColumn
            Binding="{Binding Numeric}"
            Header="Number with long header"
            Width="300"
            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
            <DataGridTextColumn.HeaderStyle>
              <Style
                TargetType="{x:Type DataGridColumnHeader}"
                BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter
                  Property="HorizontalAlignment"
                  Value="Right" />
                <Setter
                  Property="ContentTemplate">
                  <Setter.Value>
                    <DataTemplate>
                      <TextBlock
                        TextWrapping="Wrap"
                        Text="{Binding}"
                        TextAlignment="Right" />
                    </DataTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.ElementStyle>
              <Style
                TargetType="{x:Type TextBlock}">
                <Setter
                  Property="HorizontalAlignment"
                  Value="Right" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </materialDesign:MaterialDataGridTextColumn>
          <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
          <materialDesign:MaterialDataGridComboBoxColumn
            Header="Food"
            SelectedValueBinding="{Binding Food}"
            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />
        </DataGrid.Columns>
      </DataGrid>

    </ScrollViewer>

  </DockPanel>
</utils:ActivityControl>

